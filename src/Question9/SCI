The easy option with computers is always life is found in layers,
but i seek the highest first because if the whole is contained in every part
then i know that by diversifying the highest from lowest i will be able to
identify the inner one at a time creating harmony in the outer highest picture

While that was fun, what i meant o say is that all of these ideas are cyclical in nature
and one of the other is not the answer. They are generalizations that can all be compared
to each other. I seek the highest when drafting the beginning of a project so that i can
get the over all picture and APPLY the principle of inner is the basis for the outer. As
i continue to define the internal structure the outer becomes diversified and due to its
difference now has a place in the structure which creates harmony. Harmony is not sameness
it is interFunctioning. we use these principles at different stages in the coding project
and depending one what layer in the project we are in (methods, classes, package structures)
when looking in hindsight we need a criteria to better determine our success and completion

Making UML is the highest first with some inner details to diversify one thing from another
then we go down a layer deeper into the code and start to write the functions further
diversifying one object from another while at the same time increasing the functionality of
the overall program/system. Thus the whole is contained in every part. meaning the system is
not what it is without each and every part. It is whole due to the presence of each piece.
Therefore at any point in the code or programming you hold a piece to the wholeness which also
means it directly holds a wholeness to the piece of itself and the wholeness of the system.